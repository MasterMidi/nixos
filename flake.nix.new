{
  description = "NixOS configuration";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
    nur.url = "github:nix-community/NUR";
    home-manager.url = "github:nix-community/home-manager";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";
    lollypops.url = "github:pinpox/lollypops";
    hyprland.url = "github:hyprwm/Hyprland";
    nix-gaming.url = "github:fufexan/nix-gaming";
    nix-vscode-extensions.url = "github:nix-community/nix-vscode-extensions";
  };

  outputs = {
    self,
    nixpkgs,
    nur,
    home-manager,
    lollypops,
    ...
  } @ inputs: let
    inherit (self) outputs;
  in {
    pkgs = import ./pkgs {inherit inputs;};
    overlays = import ./overlays {inherit inputs;};

    nixosConfigurations = builtins.mapAttrs (system: hostPath:
      nixpkgs.lib.nixosSystem {
        inherit system;
        specialArgs = {inherit inputs outputs;};
        modules = [
          hostPath
          lollypops.nixosModules.lollypops
          ./common-settings.nix
          (home-manager.nixosModules.home-manager {
            home-manager.useGlobalPkgs = true;
            home-manager.useUserPackages = true;
            home-manager.users.michael = import ./home {inherit inputs;};
          })
        ];
      }) {
      x86_64-linux = ./hosts;
      aarch64-linux = ./hosts;
    };
  };
}
